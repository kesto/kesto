%% -------------------------------------------------------------------
%%
%% Kesto: High Availability Monitoring Software.
%%
%% Copyright (c) 2012 Conversion Co., Ltd.  All Rights Reserved.
%% Copyright (c) 2013 Kesto Project  All Rights Reserved.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% -------------------------------------------------------------------

-module(job_operate_test).

-include_lib("kesto_core/include/kesto_test.hrl").
-include("kesto_job.hrl").
-include_lib("kesto_core/include/kesto_core.hrl").
-include_lib("eunit/include/eunit.hrl").

-compile(export_all).

-ifdef(KESTO_JOB_TEST).
%% -define(RUN_TEST, true).
-endif.

setup() ->
	kesto_job_test_util:common_setup(?MODULE, fun configure/1).

cleanup() ->
	kesto_job_test_util:common_cleanup(?MODULE, fun configure/1).

configure(load) ->
	KVSettings = [{storage_backend, riak_kv_memory_backend},
				  {test, true},
				  {vnode_vclocks, true},
				  {pb_ip, "0.0.0.0"},
				  {pb_port, 0}, % arbitrary #
				  {map_js_vm_count, 4},
				  {reduce_js_vm_count, 3}],
	CoreSettings = [{handoff_ip, "0.0.0.0"},
					{handoff_port, 0},
					{ring_creation_size, 16}],
	KestoCoreSettings = [{put_option, [{w, 2}, {dw, 1}, return_body]},
						 {smtp, []},
						 {mail_from, ""},
						 {ssh_client_connect_timeout, 5000}],
	KestoJobSettings = [{check_interval, 10},
						{check_offset, 0},
						{ssh_exec_timeout, 86400000}],
	[ application:set_env(riak_core, K, V) || {K,V} <- CoreSettings ],
	[ application:set_env(riak_kv, K, V) || {K,V} <- KVSettings ],
	[ application:set_env(kesto_core, K, V) || {K,V} <- KestoCoreSettings ],
	[ application:set_env(kesto_job, K, V) || {K,V} <- KestoJobSettings ],
	ok;
configure(start) ->
	riak_core:wait_for_service(riak_kv),
	riak_core:wait_for_service(kesto_core),
	riak_core:wait_for_service(kesto_job);
configure(_) ->
	ok.

-ifdef(RUN_TEST).
job_test_() ->
	{foreach,
	 setup(),
	 cleanup(),
	 [
	  {timeout, 90, [fun run_reserve1/0]},
	  {timeout, 90, [fun run_reserve2/0]},
	  {timeout, 90, [fun run_skip1/0]},
	  {timeout, 90, [fun run_skip2/0]},
	  {timeout, 90, [fun run_skip3/0]},
	  {timeout, 90, [fun run_suspend1/0]},
	  {timeout, 90, [fun run_stop1/0]},
	  {timeout, 90, [fun run_stop2/0]},
	  {timeout, 90, [fun run_stop3/0]},
	  {timeout, 120, [fun run_change1/0]},
	  {timeout, 120, [fun run_change2/0]},
	  {timeout, 120, [fun run_change3/0]},
	  {timeout, 120, [fun run_restart1/0]},
	  {timeout, 120, [fun run_restart2/0]}
	 ]
	}.
-endif.

%% ジョブテスト(job1とnet2を定義で保留)
%% net1
%%   └ job1 → net2 → job5
%%       │      └ job4
%%       └─→ job2 → job3
run_reserve1() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}, {"group1", "job2"}, {"group1", "job3"}, {"group1", "job5"}, {"group1", "net2"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[{"group1", "job2"}, {"group1", "net2"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=true, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/true", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	Job2 = #job_conf{id="job2", 
					 name="job2 name", 
					 description="job2 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job3"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/true", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job2),
	ok = kesto_job_conf:put(Job2),
	
	Job3 = #job_conf{id="job3", 
					 name="job3 name", 
					 description="job3 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/true", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job3),
	ok = kesto_job_conf:put(Job3),
	
	Net2 = #job_conf{id="net2", 
					 name="net2 name", 
					 description="net2 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1", 
					 child_id=[{"group1", "job4"}], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job5"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=true, 
											   unmatch=false}},
	?debugVal(Net2),
	ok = kesto_job_conf:put(Net2),
	
	Job4 = #job_conf{id="job4", 
					 name="job4 name", 
					 description="job4 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net2",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/true", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job4),
	ok = kesto_job_conf:put(Job4),
	
	Job5 = #job_conf{id="job5", 
					 name="job5 name", 
					 description="job5 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "net2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/true", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job5),
	ok = kesto_job_conf:put(Job5),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", reserved, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	timer:sleep(5000),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "job1"}, undefined, cancel_reserved, 0),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", reserved, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	timer:sleep(5000),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "net2"}, undefined, cancel_reserved, 0),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	ok.

%% ジョブテスト(job2とnet2を操作で保留)
%% net1
%%   └ job1 → net2 → job5
%%       │      └ job4
%%       └─→ job2 → job3
run_reserve2() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}, {"group1", "job2"}, {"group1", "job3"}, {"group1", "job5"}, {"group1", "net2"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[{"group1", "job2"}, {"group1", "net2"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 10", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	Job2 = #job_conf{id="job2", 
					 name="job2 name", 
					 description="job2 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job3"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="logger job2", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job2),
	ok = kesto_job_conf:put(Job2),
	
	Job3 = #job_conf{id="job3", 
					 name="job3 name", 
					 description="job3 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="logger job3", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job3),
	ok = kesto_job_conf:put(Job3),
	
	Net2 = #job_conf{id="net2", 
					 name="net2 name", 
					 description="net2 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1", 
					 child_id=[{"group1", "job4"}], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job5"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net2),
	ok = kesto_job_conf:put(Net2),
	
	Job4 = #job_conf{id="job4", 
					 name="job4 name", 
					 description="job4 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net2",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="logger job4", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job4),
	ok = kesto_job_conf:put(Job4),
	
	Job5 = #job_conf{id="job5", 
					 name="job5 name", 
					 description="job5 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "net2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="logger job5", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job5),
	ok = kesto_job_conf:put(Job5),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "job2"}, undefined, reserve, 0),
	ok = kesto_job_session_operator:operate({SessionID, "group1", "net2"}, undefined, reserve, 0),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", reserved, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", reserved, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	timer:sleep(5000),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "job2"}, undefined, cancel_reserved, 0),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", reserved, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	timer:sleep(5000),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "net2"}, undefined, cancel_reserved, 0),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	ok.

%% ジョブテスト(job1とnet2を定義でスキップ)
%% net1
%%   └ job1 → net2 → job5
%%       │      └ job4
%%       └─→ job2 → job3
run_skip1() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}, {"group1", "job2"}, {"group1", "job3"}, {"group1", "job5"}, {"group1", "net2"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[{"group1", "job2"}, {"group1", "net2"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=true, 
											   control_reserve=false, 
											   control_end_state=info, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	Job2 = #job_conf{id="job2", 
					 name="job2 name", 
					 description="job2 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job3"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job2),
	ok = kesto_job_conf:put(Job2),
	
	Job3 = #job_conf{id="job3", 
					 name="job3 name", 
					 description="job3 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job3),
	ok = kesto_job_conf:put(Job3),
	
	Net2 = #job_conf{id="net2", 
					 name="net2 name", 
					 description="net2 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1", 
					 child_id=[{"group1", "job4"}], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job5"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=true, 
											   control_reserve=false,
											   control_end_state=info,  
											   unmatch=false}},
	?debugVal(Net2),
	ok = kesto_job_conf:put(Net2),
	
	Job4 = #job_conf{id="job4", 
					 name="job4 name", 
					 description="job4 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net2",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job4),
	ok = kesto_job_conf:put(Job4),
	
	Job5 = #job_conf{id="job5", 
					 name="job5 name", 
					 description="job5 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "net2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job5),
	ok = kesto_job_conf:put(Job5),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	ok.

%% ジョブテスト(job2とnet2に操作でスキップを設定)
%% net1
%%   └ job1 → net2 → job5
%%       │      └ job4
%%       └─→ job2 → job3
run_skip2() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}, {"group1", "job2"}, {"group1", "job3"}, {"group1", "job5"}, {"group1", "net2"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[{"group1", "job2"}, {"group1", "net2"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   control_end_state=info, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 10", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	Job2 = #job_conf{id="job2", 
					 name="job2 name", 
					 description="job2 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job3"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job2),
	ok = kesto_job_conf:put(Job2),
	
	Job3 = #job_conf{id="job3", 
					 name="job3 name", 
					 description="job3 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job3),
	ok = kesto_job_conf:put(Job3),
	
	Net2 = #job_conf{id="net2", 
					 name="net2 name", 
					 description="net2 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1", 
					 child_id=[{"group1", "job4"}], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job5"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false,
											   control_end_state=info,  
											   unmatch=false}},
	?debugVal(Net2),
	ok = kesto_job_conf:put(Net2),
	
	Job4 = #job_conf{id="job4", 
					 name="job4 name", 
					 description="job4 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net2",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job4),
	ok = kesto_job_conf:put(Job4),
	
	Job5 = #job_conf{id="job5", 
					 name="job5 name", 
					 description="job5 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "net2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job5),
	ok = kesto_job_conf:put(Job5),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", running, undefined)),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "job2"}, undefined, skip, info),
	ok = kesto_job_session_operator:operate({SessionID, "group1", "net2"}, undefined, skip, info),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", skip, info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", skip, info)),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", wait, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	ok.

%% ジョブテスト(job2とnet2に操作でスキップを設定・解除)
%% net1
%%   └ job1 → net2 → job5
%%       │      └ job4
%%       └─→ job2 → job3
run_skip3() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}, {"group1", "job2"}, {"group1", "job3"}, {"group1", "job5"}, {"group1", "net2"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[{"group1", "job2"}, {"group1", "net2"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   control_end_state=info, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 10", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	Job2 = #job_conf{id="job2", 
					 name="job2 name", 
					 description="job2 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job3"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job2),
	ok = kesto_job_conf:put(Job2),
	
	Job3 = #job_conf{id="job3", 
					 name="job3 name", 
					 description="job3 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job3),
	ok = kesto_job_conf:put(Job3),
	
	Net2 = #job_conf{id="net2", 
					 name="net2 name", 
					 description="net2 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1", 
					 child_id=[{"group1", "job4"}], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job5"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false,
											   control_end_state=info,  
											   unmatch=false}},
	?debugVal(Net2),
	ok = kesto_job_conf:put(Net2),
	
	Job4 = #job_conf{id="job4", 
					 name="job4 name", 
					 description="job4 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net2",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job4),
	ok = kesto_job_conf:put(Job4),
	
	Job5 = #job_conf{id="job5", 
					 name="job5 name", 
					 description="job5 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "net2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job5),
	ok = kesto_job_conf:put(Job5),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", running, undefined)),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "job2"}, undefined, skip, info),
	ok = kesto_job_session_operator:operate({SessionID, "group1", "net2"}, undefined, skip, info),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", skip, info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", skip, info)),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "job2"}, undefined, cancel_skip, 0),
	ok = kesto_job_session_operator:operate({SessionID, "group1", "net2"}, undefined, cancel_skip, 0),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", wait, info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", wait, info)),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	ok.

%% ジョブテスト(job2とnet2に操作で中断を設定・解除)
%% net1
%%   └ job1 → net2 → job5
%%       │      └ job4
%%       └─→ job2 → job3
run_suspend1() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}, {"group1", "job2"}, {"group1", "job3"}, {"group1", "job5"}, {"group1", "net2"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[{"group1", "job2"}, {"group1", "net2"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   control_end_state=info, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	Job2 = #job_conf{id="job2", 
					 name="job2 name", 
					 description="job2 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job3"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 15", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job2),
	ok = kesto_job_conf:put(Job2),
	
	Job3 = #job_conf{id="job3", 
					 name="job3 name", 
					 description="job3 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "job2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job3),
	ok = kesto_job_conf:put(Job3),
	
	Net2 = #job_conf{id="net2", 
					 name="net2 name", 
					 description="net2 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1", 
					 child_id=[{"group1", "job4"}], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job5"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false,
											   control_end_state=info,  
											   unmatch=false}},
	?debugVal(Net2),
	ok = kesto_job_conf:put(Net2),
	
	Job4 = #job_conf{id="job4", 
					 name="job4 name", 
					 description="job4 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net2",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 15", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job4),
	ok = kesto_job_conf:put(Job4),
	
	Job5 = #job_conf{id="job5", 
					 name="job5 name", 
					 description="job5 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "net2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job5),
	ok = kesto_job_conf:put(Job5),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", running, undefined)),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "job2"}, undefined, suspend, 0),
	ok = kesto_job_session_operator:operate({SessionID, "group1", "net2"}, undefined, suspend, 0),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", "node1", 'end', 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", "node1", 'end', 0)),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", suspended, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", suspended, undefined)),
	
	ok = kesto_job_session_operator:operate({SessionID, "group1", "job2"}, undefined, cancel_suspended, 0),
	ok = kesto_job_session_operator:operate({SessionID, "group1", "net2"}, undefined, cancel_suspended, 0),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job4", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job5", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	ok.

%% ジョブテスト(ノード停止)
%% net1
%%   └ job1
run_stop1() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Node2 = Node1#node{id="node2", 
					   name="node2 name", 
					   description="node2 description",
					   enabled=true,
					   ipv4=["127.0.0.1"], 
					   hostname=["testhost2"]},
	?debugVal(Node2),
	ok = kesto_core_repository:put(Node2),
	
	Scope1 = #scope{id="scope1", 
					name="scope1 name", 
					description="scope1 description", 
					enabled=true, 
					children=["node1", "node2"], 
					create_timestamp={{2012,6,5},{11,30,14}},
					update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Scope1),
	ok = kesto_core_repository:put(Scope1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="scope1", 
											   cmd_start_command="/bin/sleep 20", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", running, undefined)),
	
	{ok, OperationID} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "job1", "node1", stop, 0),
	?debugVal(OperationID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", 'end', 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	timer:sleep(15000),
	
	job_test_util:list(),
	
	ok.

%% ジョブテスト(ジョブ停止)
%% net1
%%   └ job1
run_stop2() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Node2 = Node1#node{id="node2", 
					   name="node2 name", 
					   description="node2 description",
					   enabled=true,
					   ipv4=["127.0.0.1"], 
					   hostname=["testhost2"]},
	?debugVal(Node2),
	ok = kesto_core_repository:put(Node2),
	
	Scope1 = #scope{id="scope1", 
					name="scope1 name", 
					description="scope1 description", 
					enabled=true, 
					children=["node1", "node2"], 
					create_timestamp={{2012,6,5},{11,30,14}},
					update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Scope1),
	ok = kesto_core_repository:put(Scope1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="scope1", 
											   cmd_start_command="/bin/sleep 30", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", running, undefined)),
	
	{ok, OperationID} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "job1", stop, 0),
	?debugVal(OperationID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", stoped, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	timer:sleep(30000),
	
	job_test_util:list(),
	
	ok.

%% ジョブテスト(ジョブネット停止)
%% net1
%%   └ job1
run_stop3() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Node2 = Node1#node{id="node2", 
					   name="node2 name", 
					   description="node2 description",
					   enabled=true,
					   ipv4=["127.0.0.1"], 
					   hostname=["testhost2"]},
	?debugVal(Node2),
	ok = kesto_core_repository:put(Node2),
	
	Scope1 = #scope{id="scope1", 
					name="scope1 name", 
					description="scope1 description", 
					enabled=true, 
					children=["node1", "node2"], 
					create_timestamp={{2012,6,5},{11,30,14}},
					update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Scope1),
	ok = kesto_core_repository:put(Scope1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="scope1", 
											   cmd_start_command="/bin/sleep 30", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", running, undefined)),
	
	{ok, OperationID} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "net1", stop, 0),
	?debugVal(OperationID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", stoped, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", stoped, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	timer:sleep(30000),
	
	job_test_util:list(),
	
	ok.

%% ジョブテスト(ノードの終了値変更)
%% net1
%%   └ job1
run_change1() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Node2 = Node1#node{id="node2", 
					   name="node2 name", 
					   description="node2 description",
					   enabled=true,
					   ipv4=["127.0.0.1"], 
					   hostname=["testhost2"]},
	?debugVal(Node2),
	ok = kesto_core_repository:put(Node2),
	
	Scope1 = #scope{id="scope1", 
					name="scope1 name", 
					description="scope1 description", 
					enabled=true, 
					children=["node1", "node2"], 
					create_timestamp={{2012,6,5},{11,30,14}},
					update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Scope1),
	ok = kesto_core_repository:put(Scope1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="scope1", 
											   cmd_start_command="/bin/sleep 20", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", running, undefined)),
	
	{ok, OperationID1} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "job1", "node1", stop, 0),
	?debugVal(OperationID1),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", 'end', 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	{ok, OperationID2} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "job1", "node1", change, 0),
	?debugVal(OperationID2),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", changed, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	timer:sleep(15000),
	
	ok.

%% ジョブテスト(ジョブの終了値変更)
%% net1
%%   └ job1
run_change2() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Node2 = Node1#node{id="node2", 
					   name="node2 name", 
					   description="node2 description",
					   enabled=true,
					   ipv4=["127.0.0.1"], 
					   hostname=["testhost2"]},
	?debugVal(Node2),
	ok = kesto_core_repository:put(Node2),
	
	Scope1 = #scope{id="scope1", 
					name="scope1 name", 
					description="scope1 description", 
					enabled=true, 
					children=["node1", "node2"], 
					create_timestamp={{2012,6,5},{11,30,14}},
					update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Scope1),
	ok = kesto_core_repository:put(Scope1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="scope1", 
											   cmd_start_command="/bin/sleep 20", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", running, undefined)),
	
	{ok, OperationID1} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "job1", stop, 0),
	?debugVal(OperationID1),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", stoped, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	{ok, OperationID2} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "job1", change, info),
	?debugVal(OperationID2),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", changed, info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	timer:sleep(15000),
	
	ok.

%% ジョブテスト(ジョブネットの終了値変更)
%% net1
%%   └ job1
run_change3() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Node2 = Node1#node{id="node2", 
					   name="node2 name", 
					   description="node2 description",
					   enabled=true,
					   ipv4=["127.0.0.1"], 
					   hostname=["testhost2"]},
	?debugVal(Node2),
	ok = kesto_core_repository:put(Node2),
	
	Scope1 = #scope{id="scope1", 
					name="scope1 name", 
					description="scope1 description", 
					enabled=true, 
					children=["node1", "node2"], 
					create_timestamp={{2012,6,5},{11,30,14}},
					update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Scope1),
	ok = kesto_core_repository:put(Scope1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="scope1", 
											   cmd_start_command="/bin/sleep 30", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", running, undefined)),
	
	{ok, OperationID1} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "net1", stop, 0),
	?debugVal(OperationID1),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node1", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", "node2", stoped, 0)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", stoped, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", stoped, undefined)),
	?assert(job_test_util:check_session_state(SessionID, running)),
	
	{ok, OperationID2} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "net1", change, info),
	?debugVal(OperationID2),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", changed, info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	timer:sleep(15000),
	
	job_test_util:list(),
	
	ok.

%% ジョブテスト(job1を中断してから再実行)
%% net1
%%   └ job1 → net2 → job3
%%               └ job2
run_restart1() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}, {"group1", "net2"}, {"group1", "job3"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[{"group1", "job2"}, {"group1", "net2"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   control_end_state=info, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 15", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	Net2 = #job_conf{id="net2", 
					 name="net2 name", 
					 description="net2 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1", 
					 child_id=[{"group1", "job2"}], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job3"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false,
											   control_end_state=info,  
											   unmatch=false}},
	?debugVal(Net2),
	ok = kesto_job_conf:put(Net2),
	
	Job2 = #job_conf{id="job2", 
					 name="job2 name", 
					 description="job2 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net2",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job2),
	ok = kesto_job_conf:put(Job2),
	
	Job3 = #job_conf{id="job3", 
					 name="job3 name", 
					 description="job3 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "net2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job3),
	ok = kesto_job_conf:put(Job3),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", running, undefined)),
	
	{ok, OperationID1} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "job1", suspend, 0),
	?debugVal(OperationID1),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", suspended, undefined)),
	
	{ok, OperationID2} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "job1", restart, 0),
	?debugVal(OperationID2),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	ok.

%% ジョブテスト(net2を中断してから再実行)
%% net1
%%   └ job1 → net2 → job3
%%               └ job2
run_restart2() ->
	Node1 = #node{id="node1", 
				  name="node1 name", 
				  description="node1 description", 
				  type=linux, 
				  enabled=true, 
				  ipv4=["127.0.0.1"], 
				  ipv6=[], 
				  ssh_port=22, 
				  ssh_user="kesto_test", 
				  ssh_password="kesto_test", 
				  hostname=["testhost1"], 
				  create_timestamp={{2012,6,5},{11,30,14}},
				  update_timestamp={{2012,6,5},{11,33,14}}},
	?debugVal(Node1),
	ok = kesto_core_repository:put(Node1),
	
	Net1 = #job_conf{id="net1", 
					 name="net1 name", 
					 description="net1 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="root", 
					 child_id=[{"group1", "job1"}, {"group1", "net2"}, {"group1", "job3"}], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false}},
	?debugVal(Net1),
	ok = kesto_job_conf:put(Net1),
	
	Job1 = #job_conf{id="job1", 
					 name="job1 name", 
					 description="job1 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[{"group1", "job2"}, {"group1", "net2"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   control_end_state=info, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job1),
	ok = kesto_job_conf:put(Job1),
	
	Net2 = #job_conf{id="net2", 
					 name="net2 name", 
					 description="net2 description", 
					 type=net, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1", 
					 child_id=[{"group1", "job2"}], 
					 previous_id=[{"group1", "job1"}], 
					 next_id=[{"group1", "job3"}], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false,
											   control_end_state=info,  
											   unmatch=false}},
	?debugVal(Net2),
	ok = kesto_job_conf:put(Net2),
	
	Job2 = #job_conf{id="job2", 
					 name="job2 name", 
					 description="job2 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net2",
					 child_id=[], 
					 previous_id=[], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 15", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job2),
	ok = kesto_job_conf:put(Job2),
	
	Job3 = #job_conf{id="job3", 
					 name="job3 name", 
					 description="job3 description", 
					 type=job, 
					 recovery=false, 
					 group_id="group1", 
					 parent_id="net1",
					 child_id=[], 
					 previous_id=[{"group1", "net2"}], 
					 next_id=[], 
					 info_end_value_from=0,
					 info_end_value_to=0,
					 warning_end_value_from=1, 
					 warning_end_value_to=1,
					 control=#job_conf_control{calendar=false, 
											   control_skip=false, 
											   control_reserve=false, 
											   unmatch=false},
					 command=#job_conf_command{cmd_facility_id="node1", 
											   cmd_start_command="/bin/sleep 1", 
											   cmd_stop_command="/bin/true",  
											   cmd_effective_user="root", 
											   cmd_error_end_flg=false}},
	?debugVal(Job3),
	ok = kesto_job_conf:put(Job3),
	
	{ok, SessionID} = kesto_job_executer:run("group1", "net1"),
	?debugVal(SessionID),
	
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", running, undefined)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", running, undefined)),
	
	{ok, OperationID1} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "net2", suspend, 0),
	?debugVal(OperationID1),

	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", suspended, undefined)),
	
	{ok, OperationID2} = kesto_job_vnode:operate(kesto_job_session_util:get_preflist(), SessionID, "group1", "net2", restart, 0),
	?debugVal(OperationID2),

	?assert(job_test_util:check_session_state(SessionID, "group1", "job1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job2", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "job3", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, "group1", "net1", 'end', info)),
	?assert(job_test_util:check_session_state(SessionID, 'end')),
	
	ok.
